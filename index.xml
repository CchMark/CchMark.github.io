<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>The Mark Chang Life</title><link>https://cchmark.github.io/</link><description>Recent content on The Mark Chang Life</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Thu, 01 Dec 2022 16:49:20 +0800</lastBuildDate><atom:link href="https://cchmark.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>20221201ToolsTips</title><link>https://cchmark.github.io/posts/20221201toolstips/</link><pubDate>Thu, 01 Dec 2022 16:49:20 +0800</pubDate><guid>https://cchmark.github.io/posts/20221201toolstips/</guid><description>Visual Studio 好用設定與技巧 Shift+Alt+. 往下選取相同的文字 Shift+Alt+; 全選相同的文字 Ctrl+Shift+insert 循環剪貼簿(GUI) Shift+Enter 文字插入點跳到下一行 Ctrl + F12 移動至實作 Visual Studio 文字設定 選項 → 環境 → 字型和色彩 → 字型下拉框 → 選擇 Cascadia Code 大小 12 這樣設定對眼睛比較舒服XD</description></item><item><title>20221124CSarpByDapper</title><link>https://cchmark.github.io/posts/20221124csarpbydapper/</link><pubDate>Thu, 24 Nov 2022 16:04:39 +0800</pubDate><guid>https://cchmark.github.io/posts/20221124csarpbydapper/</guid><description>Dappar 常用方法 public class Customer { public int CustomerID {get;set;} public string CustomerName {get;set;} public string ContactName {get;set;} public string Address {get;set;} public string City {get;set;} public string PostalCode {get;set;} public string Country {get;set;} } //Dapper using (var connection = new SqlConnection(ConnectionString)) { //Query 型別說明 //沒給型別 回傳值IEnumerable&amp;lt;dynamic&amp;gt; IEnumerable&amp;lt;dynamic&amp;gt; orderDetails = connection.</description></item><item><title>20221117CSharpByDapper</title><link>https://cchmark.github.io/posts/20221117csharp/</link><pubDate>Thu, 17 Nov 2022 10:41:06 +0800</pubDate><guid>https://cchmark.github.io/posts/20221117csharp/</guid><description>ASP.NET Dapper 介紹 工作上常聽到Dapper，但不知道這個套件實際如何使用，所以寫一篇學習筆記XD
Dapper介紹 Dapper是Microsoft .NET平台的物件關聯對應ORM(object-relational mapping)套件：它提供了一個將對象資料映射到資料庫的框架。Dapper 是免費的開源軟件，在License部分為Apache License 2.</description></item><item><title>20221110CSharp</title><link>https://cchmark.github.io/posts/20221110csharp/</link><pubDate>Thu, 10 Nov 2022 09:27:19 +0800</pubDate><guid>https://cchmark.github.io/posts/20221110csharp/</guid><description>C# Yield Return Yield Return 介紹 Yield 是指 Microsoft .Net 中用來實作 iterator(迭代器) 設計模式的語法糖，透過編輯器自動產生的IEnumerator衍生類別，並且實作方法。</description></item><item><title>20221107CSharp</title><link>https://cchmark.github.io/posts/20221107csharp/</link><pubDate>Mon, 07 Nov 2022 11:33:55 +0800</pubDate><guid>https://cchmark.github.io/posts/20221107csharp/</guid><description>C#讀寫檔應用 TXT 讀檔 private string checkToken() { if (File.Exists(tokenPath)) { DateTime dt = File.</description></item><item><title>20221104CSharpPart2</title><link>https://cchmark.github.io/posts/20221104csharppart2/</link><pubDate>Fri, 04 Nov 2022 16:01:16 +0800</pubDate><guid>https://cchmark.github.io/posts/20221104csharppart2/</guid><description>IEnumerable 和 List 區別 IEnumerable 與 List 差異 C# 中 IEnumerable 和 List 的主要區別在於 IEnumerable 是一個介面，而 List 是一個具體的class可以new 出來實作。此外， IEnumerable 是只讀的，而 List 不是。 List 提供Add、Clear、Contains、IndexOf、RemoveAt、Count等方法，而 IEnumerable 提供了一個介面來接收集合資料，用於逐一讀取集合中的資料內容（枚舉）。</description></item><item><title>20221104CSharp</title><link>https://cchmark.github.io/posts/20221104csharp/</link><pubDate>Fri, 04 Nov 2022 11:19:03 +0800</pubDate><guid>https://cchmark.github.io/posts/20221104csharp/</guid><description>C# 如何做分頁 //每頁顯示資料 const int pageSize = 2; //頁碼 初始0 為 畫面呈現時的第一頁 int pageNum = 0; //建立array 資料 string[] names = { &amp;#34;a&amp;#34;, &amp;#34;b&amp;#34;, &amp;#34;c&amp;#34;, &amp;#34;d&amp;#34;, &amp;#34;e&amp;#34;, &amp;#34;f&amp;#34;, &amp;#34;g&amp;#34;, &amp;#34;h&amp;#34;, &amp;#34;i&amp;#34;,&amp;#34;j&amp;#34;,&amp;#34;k&amp;#34; }; while (pageNum * pageSize &amp;lt; names.</description></item><item><title>20221102CSharp</title><link>https://cchmark.github.io/posts/20221102csharp/</link><pubDate>Wed, 02 Nov 2022 11:29:41 +0800</pubDate><guid>https://cchmark.github.io/posts/20221102csharp/</guid><description>RestSharp 應用說明 筆記一下~
var client = new RestClient(&amp;#34;http://example.com&amp;#34;); //為身分驗證器新增 帳號 密碼 //client.</description></item><item><title>20221024CSharp</title><link>https://cchmark.github.io/posts/20221024csharp/</link><pubDate>Mon, 24 Oct 2022 15:32:12 +0800</pubDate><guid>https://cchmark.github.io/posts/20221024csharp/</guid><description>CSVToDataTable 指定某字串為結束位置 筆記一下NPOI 轉 DataTable 字串之中有換行符號導致提前讀取結束，指定結束位置的對應字串
public static DataTable CsvToDataTableByNewEgg(string fileName) { DataTable dataTable = new DataTable(); try { using (StreamReader sr = new StreamReader(fileName)) { char[] separators = new char[] { &amp;#39;#&amp;#39;, &amp;#39;&amp;#34;&amp;#39;, &amp;#39; &amp;#39; }; string[] columnheaders = sr.</description></item><item><title>20221006Tools</title><link>https://cchmark.github.io/posts/20221006tools/</link><pubDate>Thu, 06 Oct 2022 16:11:52 +0800</pubDate><guid>https://cchmark.github.io/posts/20221006tools/</guid><description>建立Postman API Mock Server 主要應用在前後端分離的架構下，前端在完成網頁畫面的切版後，需要等待後端給API的規格。所以使用Postman Mock Server 初步設計API傳值結構以及回傳值結構供前端Mock。 待後端完成相關實作完成，後續只要替換網址做測試了。
好處:</description></item><item><title>20221003CSharp</title><link>https://cchmark.github.io/posts/20221003csharp/</link><pubDate>Mon, 03 Oct 2022 15:11:37 +0800</pubDate><guid>https://cchmark.github.io/posts/20221003csharp/</guid><description>C# List Add 擴充方法 小技巧 //限制必須使用執行個體方法或是擴充方法的狀況 集合初始設定式的 Add 擴充方法 static void Main(string[] args) { //以前需要這樣寫 //var people = new List&amp;lt;Person&amp;gt;{ new Person { Name = &amp;quot;Mark49&amp;quot;, Age = 24 }, new Person { Name = &amp;quot;Sherry&amp;quot;, Age = 20 }}; //現在透過Add擴充方法 可以簡化如下新增 List 資料 var people = new List&amp;lt;Person&amp;gt; { { &amp;quot;Mark49&amp;quot;, 24 },{&amp;quot;Sherry&amp;quot; ,20} }; Display(people); } private static void Display(IEnumerable&amp;lt;Person&amp;gt; source) { foreach (var p in source) { Console.</description></item><item><title>20220926CSharp</title><link>https://cchmark.github.io/posts/20220926csharp/</link><pubDate>Mon, 26 Sep 2022 10:16:57 +0800</pubDate><guid>https://cchmark.github.io/posts/20220926csharp/</guid><description>C# 何謂集合(Collections) 集合有兩種使用方式 1.建立物件的陣列(Array) 陣列(Array): 需相同型別的集合，並透過引索取得資料內容。長度是固定的。用途適用於建立和處理固定數目的強類型物件
//一般宣告陣列，可以初始化陣列。 不需要長度規範，因為它可以由清單中的內容做推斷。 int[] ints1 = new int[] {1,2,3 }; string[] strings1 = new string[] { &amp;quot;a&amp;quot;, &amp;quot;b&amp;quot;, &amp;quot;c&amp;quot; }; //宣告時，初始化陣列時避免 new 運算式和陣列類型，稱為隱含型別陣列宣告(編譯器會自行推測型別) int[] numbers = { 1, 2, 3, 4, 5 }; string[] strings = { &amp;quot;a&amp;quot;, &amp;quot;b&amp;quot;, &amp;quot;c&amp;quot; }; 從陣列(Array)取得資料 透過索引取得陣列的資料</description></item><item><title>20220920CSharpOOP</title><link>https://cchmark.github.io/posts/20220920csharpoop/</link><pubDate>Tue, 20 Sep 2022 10:24:24 +0800</pubDate><guid>https://cchmark.github.io/posts/20220920csharpoop/</guid><description>C# .NET 型別 參考型別(Reference Type) 參考類型的變數會儲存期資料 (物件) 的參考，使用參考類型時，可以使兩個變數參考相同的物件，因此對其中一個變數進行的內容變更，可能會影響另一個變數所參考的物件。 但使用實值型別時，每個變數都有自己的資料(Stack)，因此對某一個變數進行的內容變更，不會影響另一個變數。</description></item><item><title>About</title><link>https://cchmark.github.io/about/</link><pubDate>Mon, 11 Jul 2022 09:55:03 +0800</pubDate><guid>https://cchmark.github.io/about/</guid><description>Hi my name is Mark.
My dream back then was to build a game plug-in for myself to use.</description></item><item><title>20220704Python_learning_Part3</title><link>https://cchmark.github.io/posts/20220704python_learning_part3/</link><pubDate>Mon, 04 Jul 2022 14:04:00 +0800</pubDate><guid>https://cchmark.github.io/posts/20220704python_learning_part3/</guid><description>#居家上班滑鼠自動移動位置
1.套件安裝 pip install pynput pip install pyautogui
2.code from pynput.</description></item><item><title>20220704Python_learning_Part2</title><link>https://cchmark.github.io/posts/20220704python_learning_part2/</link><pubDate>Mon, 04 Jul 2022 13:20:59 +0800</pubDate><guid>https://cchmark.github.io/posts/20220704python_learning_part2/</guid><description>Selenium + WebDriver 安裝 1.Selenium 安裝 在python裡執行以下程式碼，即可安裝Selenium套件。 pip install selenium</description></item><item><title>20220704Python_learning</title><link>https://cchmark.github.io/posts/20220704python_learning/</link><pubDate>Mon, 04 Jul 2022 10:36:37 +0800</pubDate><guid>https://cchmark.github.io/posts/20220704python_learning/</guid><description>#上班逛到鐵人賽文章發現非常趣味的文章,紀錄一下過程~XDDDD
1.確認安裝好基本 Python 開發環境，以及 pip Python 套件管理工具。
2.從 Windows 開始選單中，打開「Windows 系統」中的「命令提示字元」。</description></item><item><title>20220628CSharpMVC</title><link>https://cchmark.github.io/posts/20220628csharpmvc/</link><pubDate>Tue, 28 Jun 2022 15:39:27 +0800</pubDate><guid>https://cchmark.github.io/posts/20220628csharpmvc/</guid><description>#MVC5 bootstrap 3 更新 bootstrap 5
We replaced the following:</description></item><item><title>20220308post</title><link>https://cchmark.github.io/posts/20220308post/</link><pubDate>Tue, 08 Mar 2022 11:15:01 +0800</pubDate><guid>https://cchmark.github.io/posts/20220308post/</guid><description>學習這條路很廣，喜歡什麼技術不重要，重要的是你肯花時間去學習， 總有一天你會發現原來我曾經有接觸並在無形之中成長。</description></item><item><title>Hello World</title><link>https://cchmark.github.io/posts/hello-world/</link><pubDate>Mon, 10 Jan 2022 16:12:51 +0800</pubDate><guid>https://cchmark.github.io/posts/hello-world/</guid><description>Just keep going straight!</description></item><item><title/><link>https://cchmark.github.io/archives/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cchmark.github.io/archives/</guid><description/></item></channel></rss>
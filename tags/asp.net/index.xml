<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ASP.NET on The Mark Chang Life</title><link>https://cchmark.github.io/tags/asp.net/</link><description>Recent content in ASP.NET on The Mark Chang Life</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Tue, 27 Dec 2022 10:44:49 +0800</lastBuildDate><atom:link href="https://cchmark.github.io/tags/asp.net/index.xml" rel="self" type="application/rss+xml"/><item><title>20221227ConcatenatedGoogleSheetApi</title><link>https://cchmark.github.io/posts/20221227concatenatedgooglesheetapi/</link><pubDate>Tue, 27 Dec 2022 10:44:49 +0800</pubDate><guid>https://cchmark.github.io/posts/20221227concatenatedgooglesheetapi/</guid><description>→
GooleSheet 環境建置 STEP 1 : 建立GOOGLE Cloud 先建立專案 https://console.</description></item><item><title>Dapper 常用語法</title><link>https://cchmark.github.io/posts/20221206csharpbydapper/</link><pubDate>Tue, 06 Dec 2022 09:56:44 +0800</pubDate><guid>https://cchmark.github.io/posts/20221206csharpbydapper/</guid><description>使用Dapper Transaction 和 Bulk Insert 介紹 Dapper Transaction 範例 public class Customer { public int CustomerID {get;set;} public string CustomerName {get;set;} public string ContactName {get;set;} public string Address {get;set;} public string City {get;set;} public string PostalCode {get;set;} public string Country {get;set;} } using (var connection = new SqlConnection(connectionString)) { connection.</description></item><item><title>Visual Studio 小技巧</title><link>https://cchmark.github.io/posts/20221201toolstips/</link><pubDate>Thu, 01 Dec 2022 16:49:20 +0800</pubDate><guid>https://cchmark.github.io/posts/20221201toolstips/</guid><description>Visual Studio 好用設定與技巧 Shift+Alt+. 往下選取相同的文字 Shift+Alt+; 全選相同的文字 Ctrl+Shift+insert 循環剪貼簿(GUI) Shift+Enter 文字插入點跳到下一行 Ctrl + F12 移動至實作 Visual Studio 文字設定 選項 → 環境 → 字型和色彩 → 字型下拉框 → 選擇 Cascadia Code 大小 12 這樣設定對眼睛比較舒服XD</description></item><item><title>如何應用Dapper</title><link>https://cchmark.github.io/posts/20221124csarpbydapper/</link><pubDate>Thu, 24 Nov 2022 16:04:39 +0800</pubDate><guid>https://cchmark.github.io/posts/20221124csarpbydapper/</guid><description>Dappar 常用方法 public class Customer { public int CustomerID {get;set;} public string CustomerName {get;set;} public string ContactName {get;set;} public string Address {get;set;} public string City {get;set;} public string PostalCode {get;set;} public string Country {get;set;} } //Dapper using (var connection = new SqlConnection(ConnectionString)) { //Query 型別說明 //沒給型別 回傳值IEnumerable&amp;lt;dynamic&amp;gt; IEnumerable&amp;lt;dynamic&amp;gt; orderDetails = connection.</description></item><item><title>Dapper是什麼?</title><link>https://cchmark.github.io/posts/20221117csharp/</link><pubDate>Thu, 17 Nov 2022 10:41:06 +0800</pubDate><guid>https://cchmark.github.io/posts/20221117csharp/</guid><description>ASP.NET Dapper 介紹 工作上常聽到Dapper，但不知道這個套件實際如何使用，所以寫一篇學習筆記XD
Dapper介紹 Dapper是Microsoft .NET平台的物件關聯對應ORM(object-relational mapping)套件：它提供了一個將對象資料映射到資料庫的框架。Dapper 是免費的開源軟件，在License部分為Apache License 2.</description></item><item><title>C# 語法糖 yield return</title><link>https://cchmark.github.io/posts/20221110csharp/</link><pubDate>Thu, 10 Nov 2022 09:27:19 +0800</pubDate><guid>https://cchmark.github.io/posts/20221110csharp/</guid><description>C# Yield Return Yield Return 介紹 Yield 是指 Microsoft .Net 中用來實作 iterator(迭代器) 設計模式的語法糖，透過編輯器自動產生的IEnumerator衍生類別，並且實作方法。</description></item><item><title>C# 常用讀寫筆記</title><link>https://cchmark.github.io/posts/20221107csharp/</link><pubDate>Mon, 07 Nov 2022 11:33:55 +0800</pubDate><guid>https://cchmark.github.io/posts/20221107csharp/</guid><description>C#讀寫檔應用 TXT 讀檔 private string checkToken() { if (File.Exists(tokenPath)) { DateTime dt = File.</description></item><item><title>C# 透過Linq實作分頁功能</title><link>https://cchmark.github.io/posts/20221104csharp/</link><pubDate>Fri, 04 Nov 2022 11:19:03 +0800</pubDate><guid>https://cchmark.github.io/posts/20221104csharp/</guid><description>C# 如何做分頁 //每頁顯示資料 const int pageSize = 2; //頁碼 初始0 為 畫面呈現時的第一頁 int pageNum = 0; //建立array 資料 string[] names = { &amp;#34;a&amp;#34;, &amp;#34;b&amp;#34;, &amp;#34;c&amp;#34;, &amp;#34;d&amp;#34;, &amp;#34;e&amp;#34;, &amp;#34;f&amp;#34;, &amp;#34;g&amp;#34;, &amp;#34;h&amp;#34;, &amp;#34;i&amp;#34;,&amp;#34;j&amp;#34;,&amp;#34;k&amp;#34; }; while (pageNum * pageSize &amp;lt; names.</description></item><item><title>C# RestSharp套件 筆記</title><link>https://cchmark.github.io/posts/20221102csharp/</link><pubDate>Wed, 02 Nov 2022 11:29:41 +0800</pubDate><guid>https://cchmark.github.io/posts/20221102csharp/</guid><description>RestSharp 應用說明 筆記一下~
var client = new RestClient(&amp;#34;http://example.com&amp;#34;); //為身分驗證器新增 帳號 密碼 //client.</description></item><item><title>C# .NET 型別</title><link>https://cchmark.github.io/posts/20220920csharpoop/</link><pubDate>Tue, 20 Sep 2022 10:24:24 +0800</pubDate><guid>https://cchmark.github.io/posts/20220920csharpoop/</guid><description>C# .NET 型別 參考型別(Reference Type) 參考類型的變數會儲存期資料 (物件) 的參考，使用參考類型時，可以使兩個變數參考相同的物件，因此對其中一個變數進行的內容變更，可能會影響另一個變數所參考的物件。 但使用實值型別時，每個變數都有自己的資料(Stack)，因此對某一個變數進行的內容變更，不會影響另一個變數。</description></item></channel></rss>
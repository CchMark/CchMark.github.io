<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>C Sharp OOP on The Mark Chang Live</title><link>https://cchmark.github.io/categories/c-sharp-oop/</link><description>Recent content in C Sharp OOP on The Mark Chang Live</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Mon, 03 Oct 2022 15:11:37 +0800</lastBuildDate><atom:link href="https://cchmark.github.io/categories/c-sharp-oop/index.xml" rel="self" type="application/rss+xml"/><item><title>20221003CSharp</title><link>https://cchmark.github.io/posts/20221003csharp/</link><pubDate>Mon, 03 Oct 2022 15:11:37 +0800</pubDate><guid>https://cchmark.github.io/posts/20221003csharp/</guid><description>C# List Add 擴充方法 小技巧 //限制必須使用執行個體方法或是擴充方法的狀況 集合初始設定式的 Add 擴充方法 static void Main(string[] args) { //以前需要這樣寫 //var people = new List&amp;lt;Person&amp;gt;{ new Person { Name = &amp;quot;Mark49&amp;quot;, Age = 24 }, new Person { Name = &amp;quot;Sherry&amp;quot;, Age = 20 }}; //現在透過Add擴充方法 可以簡化如下新增 List 資料 var people = new List&amp;lt;Person&amp;gt; { { &amp;quot;Mark49&amp;quot;, 24 },{&amp;quot;Sherry&amp;quot; ,20} }; Display(people); } private static void Display(IEnumerable&amp;lt;Person&amp;gt; source) { foreach (var p in source) { Console.</description></item><item><title>20220926CSharp</title><link>https://cchmark.github.io/posts/20220926csharp/</link><pubDate>Mon, 26 Sep 2022 10:16:57 +0800</pubDate><guid>https://cchmark.github.io/posts/20220926csharp/</guid><description>C# 何謂集合(Collections) 集合有兩種使用方式 1.建立物件的陣列(Array) 陣列(Array): 需相同型別的集合，並透過引索取得資料內容。長度是固定的。用途適用於建立和處理固定數目的強類型物件
//一般宣告陣列，可以初始化陣列。 不需要長度規範，因為它可以由清單中的內容做推斷。 int[] ints1 = new int[] {1,2,3 }; string[] strings1 = new string[] { &amp;quot;a&amp;quot;, &amp;quot;b&amp;quot;, &amp;quot;c&amp;quot; }; //宣告時，初始化陣列時避免 new 運算式和陣列類型，稱為隱含型別陣列宣告(編譯器會自行推測型別) int[] numbers = { 1, 2, 3, 4, 5 }; string[] strings = { &amp;quot;a&amp;quot;, &amp;quot;b&amp;quot;, &amp;quot;c&amp;quot; }; 從陣列(Array)取得資料 透過索引取得陣列的資料</description></item><item><title>20220920CSharpOOP</title><link>https://cchmark.github.io/posts/20220920csharpoop/</link><pubDate>Tue, 20 Sep 2022 10:24:24 +0800</pubDate><guid>https://cchmark.github.io/posts/20220920csharpoop/</guid><description>C# .NET 型別 參考型別(Reference Type) 參考類型的變數會儲存期資料 (物件) 的參考，使用參考類型時，可以使兩個變數參考相同的物件，因此對其中一個變數進行的內容變更，可能會影響另一個變數所參考的物件。 但使用實值型別時，每個變數都有自己的資料(Stack)，因此對某一個變數進行的內容變更，不會影響另一個變數。</description></item></channel></rss>
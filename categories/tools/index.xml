<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tools on The Mark Chang Life</title><link>https://cchmark.github.io/categories/tools/</link><description>Recent content in Tools on The Mark Chang Life</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 01 Dec 2022 16:49:20 +0800</lastBuildDate><atom:link href="https://cchmark.github.io/categories/tools/index.xml" rel="self" type="application/rss+xml"/><item><title>Visual Studio 小技巧</title><link>https://cchmark.github.io/posts/20221201toolstips/</link><pubDate>Thu, 01 Dec 2022 16:49:20 +0800</pubDate><guid>https://cchmark.github.io/posts/20221201toolstips/</guid><description>Visual Studio 好用設定與技巧 Shift+Alt+. 往下選取相同的文字 Shift+Alt+; 全選相同的文字 Ctrl+Shift+insert 循環剪貼簿(GUI) Shift+Enter 文字插入點跳到下一行 Ctrl + F12 移動至實作 Visual Studio 文字設定 選項 → 環境 → 字型和色彩 → 字型下拉框 → 選擇 Cascadia Code 大小 12 這樣設定對眼睛比較舒服XD</description></item><item><title>Postman 建立測試環境</title><link>https://cchmark.github.io/posts/20221006tools/</link><pubDate>Thu, 06 Oct 2022 16:11:52 +0800</pubDate><guid>https://cchmark.github.io/posts/20221006tools/</guid><description>建立Postman API Mock Server 主要應用在前後端分離的架構下，前端在完成網頁畫面的切版後，需要等待後端給API的規格。所以使用Postman Mock Server 初步設計API傳值結構以及回傳值結構供前端Mock。 待後端完成相關實作完成，後續只要替換網址做測試了。
好處:</description></item></channel></rss>